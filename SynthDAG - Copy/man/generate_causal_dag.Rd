% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dag_generation.R
\name{generate_causal_dag}
\alias{generate_causal_dag}
\title{Generate a Layered Random Causal DAG with Enhanced Structural Control}
\usage{
generate_causal_dag(
  num_nodes,
  num_layers,
  node_distribution_in_layers = "even",
  prob_edge_within_layer = 0,
  prob_edge_across_layers = 0.2,
  allow_skip_layers = TRUE,
  num_hubs = 0,
  hub_layer_restriction = "first_layer_only",
  hub_out_degree_multiplier = 2,
  hub_diversity = 0,
  max_out_degree_for_hubs = NULL,
  min_parents_for_designated_outcomes = 1,
  node_prefix = "V",
  seed = NULL
)
}
\arguments{
\item{num_nodes}{Integer. Total number of nodes.}

\item{num_layers}{Integer. Number of layers to distribute nodes into.}

\item{node_distribution_in_layers}{Character. Method for distributing nodes.
Currently only "even" is implemented.}

\item{prob_edge_within_layer}{Numeric. Base probability (0-1) for an edge
between two nodes within the same layer (respecting layer's internal order).}

\item{prob_edge_across_layers}{Numeric. Base probability (0-1) for an edge
from a node in an earlier layer to a node in a later layer.}

\item{allow_skip_layers}{Boolean. If TRUE, edges can span multiple layers
(e.g., L1 -> L3). If FALSE, edges only go to the immediate next layer.}

\item{num_hubs}{Integer. Number of nodes to designate as potential hubs.}

\item{hub_layer_restriction}{Character. Which layer(s) hubs are selected from.
Currently only "first_layer_only" is implemented.}

\item{hub_out_degree_multiplier}{Numeric. Factor to multiply base edge
probabilities for outgoing edges from hub nodes.}

\item{max_out_degree_for_hubs}{Integer or NULL. Optional cap on out-degree for hubs.}

\item{min_parents_for_designated_outcomes}{Integer. Minimum number of parents
for nodes in the last layer.}

\item{node_prefix}{Character. Prefix for node names (e.g., "V").}

\item{seed}{Integer. Optional seed for reproducibility.}
}
\value{
A `dagitty` graph object.
}
\description{
Creates a DAG with a layered structure, allowing for hub designation,
control over inter/intra-layer connectivity, and ensuring minimum parentage
for outcome nodes.
}
\examples{
\dontrun{
  dag_struct <- generate_causal_dag(
    num_nodes = 20,
    num_layers = 4,
    node_distribution_in_layers = "even",
    prob_edge_within_layer = 0.05,
    prob_edge_across_layers = 0.2,
    allow_skip_layers = TRUE,
    num_hubs = 2,
    hub_layer_restriction = "first_layer_only",
    hub_out_degree_multiplier = 3.0,
    max_out_degree_for_hubs = NULL, # No cap for this example
    min_parents_for_designated_outcomes = 2,
    node_prefix = "S",
    seed = 123
  )
  print(dag_struct)
  if (requireNamespace("dagitty", quietly = TRUE) && length(names(dag_struct)) > 0) {
    # dagitty::plot(dag_struct) # Plotting may require manual layout for layers
  }

  # Simpler, strictly layered DAG
  dag_simple_layered <- generate_causal_dag(
    num_nodes = 10, num_layers = 3, prob_edge_across_layers = 0.5,
    allow_skip_layers = FALSE, num_hubs = 0,
    min_parents_for_designated_outcomes = 1, seed = 456
  )
  print(dag_simple_layered)
}
}
